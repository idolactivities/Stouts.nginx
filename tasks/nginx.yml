---
- include_tasks: "install.{{ ansible_pkg_mgr }}.yml"

- name: Ensure that nginx user exists
  user:
    name: "{{ nginx_user }}"
    system: yes

- name: Delete the default Nginx site
  file:
    path: "{{ nginx_default_site }}"
    state: absent
  when: nginx_delete_default_site
  notify: reload nginx

- name: Encrypt http auth passwords
  htpasswd:
    path: "{{ nginx_auth_file }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
  with_items: "{{ nginx_auth_users }}"

- name: Ensure the Nginx site directories exist
  file:
    name: "{{ item }}"
    state: directory
  with_items:
    - "{{ nginx_sites_available_dir }}"
    - "{{ nginx_sites_enabled_dir }}"

- name: Configure Nginx site definitions
  copy:
    content: "{{ item.definition }}"
    dest: "{{ nginx_sites_available_dir }}/{{ item.name }}.conf"
  with_items: "{{ nginx_sites }}"
  register: _nginx_definitions

- name: Activate Nginx site definitions
  file:
    state: "{{ 'absent' if ('enabled' in item and not item.enabled) else 'link' }}"
    src: "{{ nginx_sites_available_dir }}/{{ item.name }}.conf"
    dest: "{{ nginx_sites_enabled_dir }}/{{ item.name }}.conf"
  with_items: "{{ nginx_sites }}"
  register: _nginx_definition_symlinks

- name: Validate Nginx configuration
  command: /usr/sbin/nginx -t
  notify: reload nginx
  when: _nginx_definitions is changed or _nginx_definition_symlinks is changed

- name: Configure Nginx
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_dir }}/nginx.conf"
  notify: restart nginx

- name: Start and enable Nginx
  service:
    name: nginx
    state: started
    enabled: yes
